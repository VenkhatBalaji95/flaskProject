{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Template to create a KMS key",
	"Parameters": {
		"roleName": {
			"Type": "String",
			"Description": "IAM role which should has access to the KMS key",
			"Default": "flaskRole"
		},
		"keySpec": {
			"Type": "String",
			"Description": "KMS Key type",
			"Default": "SYMMETRIC_DEFAULT"
		},
		"keyUsage": {
			"Type": "String",
			"Description": "Asymmetric KMS key usage. Either 'ENCRYPT_DECRYPT' or 'SIGN_VERIFY'",
			"Default": ""
		},
		"region": {
			"Type": "String",
			"Description": "Bucket region name",
			"Default": "ap-south-1"
		},
		"kmsAlias": {
			"Type": "String",
			"Description": "KMS key alias",
			"Default": "KMSflask"
		}
	},
	"Conditions": {
		"checkRegion": {
			"Fn::Equals" : [ {"Ref": "region"}, "ap-south-1" ]
		},
		"keyUsageValidation": {
			"Fn::Not": [ { "Fn::Equals": [ {"Ref": "keyUsage"}, "" ] } ]
		}
	},
	"Resources": {
		"createKMSKey": {
			"Type" : "AWS::KMS::Key",
			"Condition": "checkRegion",
			"DeletionPolicy" : "Retain",
			"Properties": {
				"Description": "KMS key will be used for Python Flask project",
				"EnableKeyRotation": true,
				"KeyPolicy": {
					"Version": "2012-10-17",
					"Statement": [
						{
	            "Sid": "Allow full access to root",
	            "Effect": "Allow",
	            "Principal": {
	              "AWS": { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root" }
	            },
	            "Action": "kms:*",
	            "Resource": "*"
	        	},
						{
							"Sid": "Allow access for Key Administrators",
							"Effect": "Allow",
							"Principal": {
								"AWS": { "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:user/admin" }
							},
							"Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:TagResource",
                "kms:UntagResource",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion"
            	],
            	"Resource": "*"
						},
						{
							"Sid": "Allow use of the key",
							"Effect": "Allow",
							"Principal": {
								"AWS": [
									{ "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:user/admin" },
									{ "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:user/flaskUser" },
									{ "Fn::ImportValue" : { "Fn::Sub": "${roleName}-ARN" } }
								] 
							},
							"Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:DescribeKey"
            	],
            	"Resource": "*"
						}
					]
				},
				"KeySpec": { "Ref": "keySpec" },
				"KeyUsage": { "Fn::If": [ "keyUsageValidation", { "Ref": "keyUsage" }, { "Ref": "AWS::NoValue" } ] }
			}
		},
		"createAliasName": {
			"Type": "AWS::KMS::Alias",
			"Condition": "checkRegion",
			"DependsOn": "createKMSKey",
			"Properties": {
				"AliasName": { "Fn::Sub": "alias/${kmsAlias}" },
				"TargetKeyId": { "Ref": "createKMSKey" }
			}
		}
	},
	"Outputs": {
		"kmsKeyARN": {
			"Description": "KMS Key ARN",
			"Value": { "Fn::GetAtt": [ "createKMSKey", "Arn" ] },
			"Export": {
				"Name": { "Fn::Sub": "${kmsAlias}-ARN" }
			}
		},
		"kmsKeyAlias": {
			"Description": "KMS key alias",
			"Value": { "Ref": "createAliasName" },
			"Export": {
				"Name": { "Fn::Sub": "${kmsAlias}-Name" }
			}
		}
	}
}